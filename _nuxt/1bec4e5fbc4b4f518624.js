(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{353:function(l,n){const e={render:function(){this.$createElement;return this._self._c,this._m(0)},staticRenderFns:[function(){var l=this,n=l.$createElement,e=l._self._c||n;return e("div",{staticClass:"frontmatter-markdown"},[e("p",[l._v("最近セキュリティ考慮したシステム設計を経験したので、メモします。")]),l._v(" "),e("h2",[l._v("1. ユーザー認証")]),l._v(" "),e("ul",[e("li",[l._v("[ ] ログイン失敗する際詳しメッセージが出さない")]),l._v(" "),e("li",[l._v("[ ] 指定回数でログイン失敗したらアカウントロックをかかる")]),l._v(" "),e("li",[l._v("[ ] アカウントロックをかかった際管理者にメール等で通知")]),l._v(" "),e("li",[l._v("[ ] パースワードの有効期限を実装")]),l._v(" "),e("li",[l._v("[ ] パースワード変更するには現在のパースワードが必要")]),l._v(" "),e("li",[l._v("[ ] 直接パースワードはDBに保存しない")])]),l._v(" "),e("h2",[l._v("2. 権限制御")]),l._v(" "),e("ul",[e("li",[l._v("[ ] 直接URLをアクセス許可かどうか検討")]),l._v(" "),e("li",[l._v("[ ] 各アクションは実行する前に権限をチェックする ボタンの表示、非表示等ではなくロジック実装である。")]),l._v(" "),e("li",[l._v("[ ] ブラウザの戻るボタンを要注意")])]),l._v(" "),e("h2",[l._v("3. セッション管理")]),l._v(" "),e("ul",[e("li",[l._v("[ ] Cookieセンシティブデーターを持たない")]),l._v(" "),e("li",[l._v("[ ] SessionIdはユニックであり、サーバー側にてアサインするべき")]),l._v(" "),e("li",[l._v("[ ] SessionIdは推測しにくい")]),l._v(" "),e("li",[l._v("[ ] SessionIdはできればライフタイムが短く設定するべき")]),l._v(" "),e("li",[l._v("[ ] ログアウトする際SessionIdは廃棄するべき")]),l._v(" "),e("li",[l._v("[ ] CookieはHttpOnly,Secure属性設定するべき")]),l._v(" "),e("li",[l._v("[ ] パーマネントCookieよりセッションCookieを使用したほうが良い")])]),l._v(" "),e("h2",[l._v("4. バリデーション")]),l._v(" "),e("ul",[e("li",[l._v("[ ] クライアントからのデータは信頼性がゼロとして必ずサーバーサイドバリデーション実装")]),l._v(" "),e("li",[l._v("[ ] HTML特殊文字、危険な文字等エスケープするべき")])]),l._v(" "),e("h2",[l._v("5. クロスサイトスクリプティング")]),l._v(" "),e("ul",[e("li",[l._v("[ ] 動的な内容を表示する箇所はすべてHTMLエスケープするか確認")]),l._v(" "),e("li",[l._v("[ ] Query stringのデータは直接表示させない")])]),l._v(" "),e("h2",[l._v("6. コマンドインジェクション")]),l._v(" "),e("ul",[e("li",[l._v("[ ] シェルコマンドが直接呼び出す際パラメータエスケープをするべきだ")])]),l._v(" "),e("h2",[l._v("7. SQLインジェクション")]),l._v(" "),e("ul",[e("li",[l._v("[ ] SQLを組み立てる際ストリング結合ではなくすべてprepare statementを使用するべき")])]),l._v(" "),e("h2",[l._v("8. バッファオーバーフロー")]),l._v(" "),e("ul",[e("li",[l._v("[ ] すべてのリクエストデータは最大値をバリデーションする")])]),l._v(" "),e("h2",[l._v("9. 暗号化,秘密情報")]),l._v(" "),e("ul",[e("li",[l._v("[ ] 認証されたアルゴリズムを使用すること")]),l._v(" "),e("li",[l._v("[ ] 秘密鍵、DB情報等を持っている.envファイルは保護すること")])]),l._v(" "),e("h2",[l._v("10. エラーハンドリング")]),l._v(" "),e("ul",[e("li",[l._v("[ ] エラーになった際エラー情報をユーザーに見せないこと")])]),l._v(" "),e("h2",[l._v("11. ロギング")]),l._v(" "),e("ul",[e("li",[l._v("[ ] ログには日付、タイプ、詳細情報が出される")])]),l._v(" "),e("h2",[l._v("12. サーバー設定")]),l._v(" "),e("ul",[e("li",[l._v("[ ] Debugモードオフする")]),l._v(" "),e("li",[l._v("[ ] すべてリクエストはHTTPSを介すること")]),l._v(" "),e("li",[l._v("[ ] Apacheサーバーの場合はApacheチェックリスト参照する")])])])}]};l.exports={attributes:{title:"[Security]Web Application Security Checklist",date:"2017-12-11T14:25:22.000Z",thumbnail:"posts/security.jpg",draft:!1,tags:["security"]},html:"<p>最近セキュリティ考慮したシステム設計を経験したので、メモします。</p>\n<h2>1. ユーザー認証</h2>\n<ul>\n<li>[ ] ログイン失敗する際詳しメッセージが出さない</li>\n<li>[ ] 指定回数でログイン失敗したらアカウントロックをかかる</li>\n<li>[ ] アカウントロックをかかった際管理者にメール等で通知</li>\n<li>[ ] パースワードの有効期限を実装</li>\n<li>[ ] パースワード変更するには現在のパースワードが必要</li>\n<li>[ ] 直接パースワードはDBに保存しない</li>\n</ul>\n<h2>2. 権限制御</h2>\n<ul>\n<li>[ ] 直接URLをアクセス許可かどうか検討</li>\n<li>[ ] 各アクションは実行する前に権限をチェックする ボタンの表示、非表示等ではなくロジック実装である。</li>\n<li>[ ] ブラウザの戻るボタンを要注意</li>\n</ul>\n<h2>3. セッション管理</h2>\n<ul>\n<li>[ ] Cookieセンシティブデーターを持たない</li>\n<li>[ ] SessionIdはユニックであり、サーバー側にてアサインするべき</li>\n<li>[ ] SessionIdは推測しにくい</li>\n<li>[ ] SessionIdはできればライフタイムが短く設定するべき</li>\n<li>[ ] ログアウトする際SessionIdは廃棄するべき</li>\n<li>[ ] CookieはHttpOnly,Secure属性設定するべき</li>\n<li>[ ] パーマネントCookieよりセッションCookieを使用したほうが良い</li>\n</ul>\n<h2>4. バリデーション</h2>\n<ul>\n<li>[ ] クライアントからのデータは信頼性がゼロとして必ずサーバーサイドバリデーション実装</li>\n<li>[ ] HTML特殊文字、危険な文字等エスケープするべき</li>\n</ul>\n<h2>5. クロスサイトスクリプティング</h2>\n<ul>\n<li>[ ] 動的な内容を表示する箇所はすべてHTMLエスケープするか確認</li>\n<li>[ ] Query stringのデータは直接表示させない</li>\n</ul>\n<h2>6. コマンドインジェクション</h2>\n<ul>\n<li>[ ] シェルコマンドが直接呼び出す際パラメータエスケープをするべきだ</li>\n</ul>\n<h2>7. SQLインジェクション</h2>\n<ul>\n<li>[ ] SQLを組み立てる際ストリング結合ではなくすべてprepare statementを使用するべき</li>\n</ul>\n<h2>8. バッファオーバーフロー</h2>\n<ul>\n<li>[ ] すべてのリクエストデータは最大値をバリデーションする</li>\n</ul>\n<h2>9. 暗号化,秘密情報</h2>\n<ul>\n<li>[ ] 認証されたアルゴリズムを使用すること</li>\n<li>[ ] 秘密鍵、DB情報等を持っている.envファイルは保護すること</li>\n</ul>\n<h2>10. エラーハンドリング</h2>\n<ul>\n<li>[ ] エラーになった際エラー情報をユーザーに見せないこと</li>\n</ul>\n<h2>11. ロギング</h2>\n<ul>\n<li>[ ] ログには日付、タイプ、詳細情報が出される</li>\n</ul>\n<h2>12. サーバー設定</h2>\n<ul>\n<li>[ ] Debugモードオフする</li>\n<li>[ ] すべてリクエストはHTTPSを介すること</li>\n<li>[ ] Apacheサーバーの場合はApacheチェックリスト参照する</li>\n</ul>\n",meta:{resourcePath:"/Volumes/Data/github.com/thanhchungbtc/myblog/content/web-application-security-checklist/index.md"},vue:{component:{data:function(){return{templateRender:null}},render:function(l){return this.templateRender?this.templateRender():l("div","Rendering")},created:function(){this.templateRender=e.render,this.$options.staticRenderFns=e.staticRenderFns}}}}}}]);