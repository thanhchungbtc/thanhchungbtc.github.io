(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{354:function(e,n){const t={render:function(){this.$createElement;return this._self._c,this._m(0)},staticRenderFns:[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"frontmatter-markdown"},[t("p",[e._v("while developing in languages that are case-insensitive like "),t("code",{pre:!0},[e._v("php")]),e._v(", be careful if development OS and production OS are acting differently at case-sensitivity, otherwise, some weird things will happen.")]),e._v(" "),t("p",[e._v("For example, the code below works well in Windows")]),e._v(" "),t("pre",{staticClass:"language-php"},[t("code",{pre:!0,attrs:{class:"language-php"}},[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// filename: app/Models/Userorder.php")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("namespace")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token package"}},[e._v("App"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Models")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("class")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("UserOrder")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("p",[e._v("usage")]),e._v(" "),t("pre",{staticClass:"language-php"},[t("code",{pre:!0,attrs:{class:"language-php"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("App"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Models"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("UserOrder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" \n")])]),e._v(" "),t("blockquote",[t("p",[e._v("Did you notice the difference between "),t("strong",[e._v("file name")]),e._v(" and "),t("strong",[e._v("class name")]),e._v("?")])]),e._v(" "),t("p",[e._v("Because "),t("strong",[e._v("php")]),e._v(" use "),t("strong",[e._v("autoload")]),e._v(" to correctly load the file and class at runtime, in the declaration")]),e._v(" "),t("pre",{staticClass:"language-php"},[t("code",{pre:!0,attrs:{class:"language-php"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("App"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Models"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("UserOrder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),t("p",[e._v("first it will try loading the file app/Models/"),t("strong",[e._v("UserOrder.php")]),e._v(" and instance "),t("strong",[e._v("UserOrder")]),e._v(" object.")]),e._v(" "),t("p",[e._v("As Windows is case-insensitive, "),t("strong",[e._v("UserOrder.php")]),e._v(" == "),t("strong",[e._v("Userorder.php")]),e._v(", no problem here, but in Linux, you will get")]),e._v(" "),t("blockquote",[t("p",[e._v("Fatal error: Class UrderOrder not found")])]),e._v(" "),t("p",[e._v("In that case, change the file name that matches the class name")]),e._v(" "),t("pre",{staticClass:"language-sh"},[t("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("app/Models/Userorder.php -> app/Models/UserOrder.php\n")])])])}]};e.exports={attributes:{title:"[PHP]Windows Case Insensitive Problem",date:"2017-05-24T21:05:03.000Z",thumbnail:"posts/case.jpg",tags:["php"]},html:'<p>while developing in languages that are case-insensitive like <code>php</code>, be careful if development OS and production OS are acting differently at case-sensitivity, otherwise, some weird things will happen.</p>\n<p>For example, the code below works well in Windows</p>\n<pre class="language-php"><code class="language-php"><span class="token comment">// filename: app/Models/Userorder.php</span>\n<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Models</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">UserOrder</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>usage</p>\n<pre class="language-php"><code class="language-php"><span class="token keyword">new</span> <span class="token class-name"><span class="token punctuation">\\</span>App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>UserOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n</code></pre>\n<blockquote>\n<p>Did you notice the difference between <strong>file name</strong> and <strong>class name</strong>?</p>\n</blockquote>\n<p>Because <strong>php</strong> use <strong>autoload</strong> to correctly load the file and class at runtime, in the declaration</p>\n<pre class="language-php"><code class="language-php"><span class="token keyword">new</span> <span class="token class-name"><span class="token punctuation">\\</span>App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>UserOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<p>first it will try loading the file app/Models/<strong>UserOrder.php</strong> and instance <strong>UserOrder</strong> object.</p>\n<p>As Windows is case-insensitive, <strong>UserOrder.php</strong> == <strong>Userorder.php</strong>, no problem here, but in Linux, you will get</p>\n<blockquote>\n<p>Fatal error: Class UrderOrder not found</p>\n</blockquote>\n<p>In that case, change the file name that matches the class name</p>\n<pre class="language-sh"><code class="language-sh">app/Models/Userorder.php -&gt; app/Models/UserOrder.php\n</code></pre>\n',meta:{resourcePath:"/Volumes/Data/github.com/thanhchungbtc/myblog/content/windows-case-insensitive-problem/index.md"},vue:{component:{data:function(){return{templateRender:null}},render:function(e){return this.templateRender?this.templateRender():e("div","Rendering")},created:function(){this.templateRender=t.render,this.$options.staticRenderFns=t.staticRenderFns}}}}}}]);