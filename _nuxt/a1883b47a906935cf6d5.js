(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{348:function(e,n){const t={render:function(){this.$createElement;return this._self._c,this._m(0)},staticRenderFns:[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"frontmatter-markdown"},[t("h2",[e._v("Useful Postgres command")]),e._v(" "),t("h3",[e._v("1. Move DB to another server")]),e._v(" "),t("pre",{staticClass:"language-shell"},[t("code",{pre:!0,attrs:{class:"language-shell"}},[e._v("pg_dump -C -h sourceip -U username password "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" psql -h destinationip -U username\n")])]),e._v(" "),t("h3",[e._v("2. Init, start, restart")]),e._v(" "),t("pre",{staticClass:"language-shell"},[t("code",{pre:!0,attrs:{class:"language-shell"}},[e._v("initdb -D /path/to/data/folder\npg_ctl -D /path/to/data/folder start\npg_ctl -D /path/to/data/folder restart\n")])]),e._v(" "),t("h3",[e._v("3. Config file")]),e._v(" "),t("ul",[t("li",[e._v("pg_hba.config: use to config authentication method")]),e._v(" "),t("li",[e._v("postgres.conf: use to config listenning host, etc.")])]),e._v(" "),t("h3",[e._v("4. Config authentication")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("For server")])])]),e._v(" "),t("pre",{staticClass:"language-shell"},[t("code",{pre:!0,attrs:{class:"language-shell"}},[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("vim")]),e._v(" /path/to/pg_hba.conf\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# add the following line:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("host")]),e._v("    all             all             "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10.0")]),e._v(".0.70/32            md5\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# change IP address")]),e._v("\n")])]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("For client")]),t("br"),e._v("\nCreate ~/.pgpass and add the following line")])]),e._v(" "),t("pre",{staticClass:"language-shell"},[t("code",{pre:!0,attrs:{class:"language-shell"}},[e._v("host:port:dbname:usr:pwd\n")])]),e._v(" "),t("p",[e._v("change permission")]),e._v(" "),t("pre",{staticClass:"language-shell"},[t("code",{pre:!0,attrs:{class:"language-shell"}},[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" 0600 ~/.pgpass\n")])])])}]};e.exports={attributes:{title:"Postgres Memo",date:"2017-07-24T22:04:16.000Z",description:null,thumbnail:"posts/postgres-elephant.png",tags:["postgres"]},html:'<h2>Useful Postgres command</h2>\n<h3>1. Move DB to another server</h3>\n<pre class="language-shell"><code class="language-shell">pg_dump -C -h sourceip -U username password <span class="token operator">|</span> psql -h destinationip -U username\n</code></pre>\n<h3>2. Init, start, restart</h3>\n<pre class="language-shell"><code class="language-shell">initdb -D /path/to/data/folder\npg_ctl -D /path/to/data/folder start\npg_ctl -D /path/to/data/folder restart\n</code></pre>\n<h3>3. Config file</h3>\n<ul>\n<li>pg_hba.config: use to config authentication method</li>\n<li>postgres.conf: use to config listenning host, etc.</li>\n</ul>\n<h3>4. Config authentication</h3>\n<ul>\n<li><strong>For server</strong></li>\n</ul>\n<pre class="language-shell"><code class="language-shell"><span class="token function">vim</span> /path/to/pg_hba.conf\n<span class="token comment"># add the following line:</span>\n<span class="token function">host</span>    all             all             <span class="token number">10.0</span>.0.70/32            md5\n<span class="token comment"># change IP address</span>\n</code></pre>\n<ul>\n<li><strong>For client</strong><br>\nCreate ~/.pgpass and add the following line</li>\n</ul>\n<pre class="language-shell"><code class="language-shell">host:port:dbname:usr:pwd\n</code></pre>\n<p>change permission</p>\n<pre class="language-shell"><code class="language-shell"><span class="token function">chmod</span> 0600 ~/.pgpass\n</code></pre>\n',meta:{resourcePath:"/Volumes/Data/github.com/thanhchungbtc/myblog/content/postgres-memo/index.md"},vue:{component:{data:function(){return{templateRender:null}},render:function(e){return this.templateRender?this.templateRender():e("div","Rendering")},created:function(){this.templateRender=t.render,this.$options.staticRenderFns=t.staticRenderFns}}}}}}]);